from sqlalchemy import Column, Integer, String, Numeric, Date
from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()

class Mission(Base):
    __tablename__ = 'mission'

    mission_id = Column('Mission ID', Integer, primary_key=True)
    mission_date = Column('Mission Date', Date)
    theater_of_operations = Column('Theater Of Operations', String(100))
    country_id = Column('Country', String(100))
    air_force = Column('Air Force', String(100))
    unit_id = Column('Unit ID', String(100))
    aircraft_series = Column('Aircraft Series', String(100))
    callsign = Column('Callsign', String(100))
    mission_type = Column('Mission Type', String(100))
    takeoff_base = Column('Takeoff Base', String(255))
    takeoff_location = Column('Takeoff Location', String(255))
    takeoff_latitude = Column('Takeoff Latitude', String(15))
    takeoff_longitude = Column('Takeoff Longitude', Numeric(10, 6))
    target_id = Column('Target ID', String(100))
    target_country = Column('Target Country', String(100))
    target_city = Column('Target City', String(100))
    target_type = Column('Target Type', String(100))
    target_industry = Column('Target Industry', String(255))
    target_priority = Column('Target Priority', String(5))
    target_latitude = Column('Target Latitude', Numeric(10, 6))
    target_longitude = Column('Target Longitude', Numeric(10, 6))
    altitude_hundreds_of_feet = Column('Altitude Hundreds Of Feet', Numeric(7, 2))
    airborne_aircraft = Column('Airborne Aircraft', Numeric(4, 1))
    attacking_aircraft = Column('Attacking Aircraft', Integer)
    bombing_aircraft = Column('Bombing Aircraft', Integer)
    aircraft_returned = Column('Aircraft Returned', Integer)
    aircraft_failed = Column('Aircraft Failed', Integer)
    aircraft_damaged = Column('Aircraft Damaged', Integer)
    aircraft_lost = Column('Aircraft Lost', Integer)
    high_explosives = Column('High Explosives', String(255))
    high_explosives_type = Column('High Explosives Type', String(255))
    high_explosives_weight_pounds = Column('High Explosives Weight Pounds', String(25))
    high_explosives_weight_tons = Column('High Explosives Weight Tons', Numeric(10, 2))
    incendiary_devices = Column('Incendiary Devices', String(255))
    incendiary_devices_type = Column('Incendiary Devices Type', String(255))
    incendiary_devices_weight_pounds = Column('Incendiary Devices Weight Pounds', Numeric(10, 2))
    incendiary_devices_weight_tons = Column('Incendiary Devices Weight Tons', Numeric(10, 2))
    fragmentation_devices = Column('Fragmentation Devices', String(255))
    fragmentation_devices_type = Column('Fragmentation Devices Type', String(255))
    fragmentation_devices_weight_pounds = Column('Fragmentation Devices Weight Pounds', Numeric(10, 2))
    fragmentation_devices_weight_tons = Column('Fragmentation Devices Weight Tons', Numeric(10, 2))
    total_weight_pounds = Column('Total Weight Pounds', Numeric(10, 2))
    total_weight_tons = Column('Total Weight Tons', Numeric(10, 2))
    time_over_target = Column('Time Over Target', String(8))
    bomb_damage_assessment = Column('Bomb Damage Assessment', String(255))
    source_id = Column('Source ID', String(100))
